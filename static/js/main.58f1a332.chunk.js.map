{"version":3,"sources":["logo.svg","redux/actions.ts","components/TodoInput.jsx","components/TodoItem.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","redux/states.ts","redux/store.js","redux/reducer.ts","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","TodoInput","useState","name","setName","dispatch","useDispatch","className","onChange","e","target","value","changeName","type","onClick","payload","id","uuid","TodoItem","todo","editable","setEditable","inputRef","useRef","length","ref","Promise","resolve","reject","then","todoId","TodoList","todos","useSelector","state","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","action","newTodos","push","filter","index","i","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58f1a332.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { todoType } from \"./states\";\n\nexport const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\ntype addTodoActionType = {\n  payload: todoType;\n  type: typeof ADD_TODO;\n};\n\nexport const addTodo = (todo: todoType): addTodoActionType => {\n  return {\n    payload: todo,\n    type: \"ADD_TODO\",\n  };\n};\n\ntype updateTodoType = {\n  payload: string;\n  type: typeof UPDATE_TODO;\n};\n\nexport const deleteTodo = (todoId: number): deleteTodoType => {\n  return {\n    type: DELETE_TODO,\n    payload: todoId,\n  };\n};\n\n\ntype deleteTodoType = {\n  payload: number;\n  type: typeof DELETE_TODO;\n};\n\nexport const updateTodo = (todoName: string): updateTodoType => {\n  return {\n    type: \"UPDATE_TODO\",\n    payload: todoName,\n  };\n};\n\nexport type ActionTypes = updateTodoType | deleteTodoType | addTodoActionType;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\nimport { v1 as uuid } from \"uuid\";\n\nexport default function TodoInput() {\n  const [name, setName] = useState(\"\");\n\n  let dispatch = useDispatch();\n\n  const changeName = (e) => {\n    setName(e.target.value);\n  };\n\n  return (\n    <div>\n      <div className=\"row m-2\">\n        <input\n          onChange={(e) => changeName(e)}\n          value={name}\n          type=\"text\"\n          className=\"col form-control\"\n        />\n        <button\n          onClick={() => {\n            dispatch(\n              addTodo({\n                id: uuid(),\n                name,\n              })\n            );\n            setName(\"\");\n          }}\n          className=\"btn btn-primary mx-2\"\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, updateTodo } from \"../redux/actions\";\n\nexport default function TodoItem({ todo }) {\n  const [editable, setEditable] = useState(false);\n  const [name, setName] = useState(todo.name);\n\n  const inputRef = useRef(null);\n\n  let dispatch = useDispatch();\n\n  const Edit = () => {\n      dispatch(updateTodo({\n        ...todo,\n        name: name\n      }));\n      if(editable) {\n          setName(todo.name)\n      }\n      const editablePromise = new Promise((resolve, reject) => {\n        resolve(setEditable(!editable));\n      }).then(() => {\n        // return inputRef.current.focus();\n      })\n      \n  };\n\n  return (\n    <div>\n      <div className=\"row mx-2 align-items-center\">\n        <div>#{todo.id.length > 1 ? todo.id[2] : todo.id}</div>\n        <div className=\"col m-0\">\n          {editable ? (\n            <input\n              ref={inputRef}\n              type=\"text\"\n              className=\"form-control\"\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              className=\"col m-0\"\n            />\n          ) : (\n            <h4>{todo.name}</h4>\n          )}\n        </div>\n        <button\n          onClick={() => {\n            Edit();\n          }}\n          className={editable ? \"btn btn-success m-2\" : \"btn btn-primary m-2\"}\n        >\n          {editable ? \"Update\" : \"Edit\"}\n        </button>\n        <button\n          onClick={() => dispatch(deleteTodo(todo.id))}\n          className={\"btn btn-danger m-2\"}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TodoItem from \"./TodoItem\";\n\nfunction TodoList() {\n  let todos = useSelector((state) => state);\n  return (\n    <div className=\"my-5\">\n      {todos.map(todo=>{\n        return <TodoItem key={todo.id} todo={todo}/>\n      })}\n    </div>\n  );\n}\n\nexport default TodoList;\n","import logo from './logo.svg';\nimport './App.css';\nimport TodoInput from './components/TodoInput';\nimport TodoList from './components/TodoList';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App m-5\">\n      <TodoInput/>\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type todoType = {\n  id: string,\n  name: string\n}\n\nexport type todosType = typeof todos;\n\nexport let todos = [\n  {\n    id: \"1\",\n    name: \"One\",\n  } as todoType,\n  {\n    id: \"2\",\n    name: \"Two\",\n  } as todoType,\n  {\n    id: \"3\",\n    name: \"Three\",\n  } as todoType\n]\n","import {createStore} from 'redux'\nimport {reducer} from './reducer'\n\nexport let store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import { ActionTypes, ADD_TODO, DELETE_TODO, UPDATE_TODO } from \"./actions\";\nimport { todos, todosType, todoType} from \"./states\";\n\n\nexport let reducer = (state:todosType = todos, action: any):todosType => {\n  let newTodos = [];\n  switch (action.type) {\n    case ADD_TODO:\n      newTodos = [...state];\n      newTodos.push(action.payload);\n      return newTodos;\n    case DELETE_TODO:\n      newTodos = [...state];\n      newTodos = newTodos.filter((todo:todoType) => {\n        return todo.id != action.payload;\n      });\n      return newTodos;\n    case UPDATE_TODO:\n      newTodos = [...state];\n      let index = -1;\n      for (let i = 0; i < newTodos.length; i++) {\n        index++;\n        if (newTodos[i].id == action.payload.id) {\n          break;\n        }\n      }\n      if (index != -1) {\n        newTodos[index] = action.payload\n        return newTodos\n      }\n  }\n  return state;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store} from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}